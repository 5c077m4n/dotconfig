#!/usr/bin/env node

const { copyFile, readFile, writeFile } = require("node:fs/promises");

const HOSTS_PATH = "/etc/hosts";
const NUMBER_FORMATTER = new Intl.NumberFormat();

/** @return {string[]} */
function filterComments(/** @type {string} */ lines) {
	return lines
		.split("\n")
		.map((l) => l.trim())
		.filter((l) => !l.startsWith("#"));
}

/** @return {Promise<string[]>} */
async function getHosts(/** @type {string} */ url) {
	const hostsFileResponse = await fetch(url);
	const text = await hostsFileResponse.text();

	return filterComments(text);
}

async function main() {
	const localHostsFile = await readFile(HOSTS_PATH, { encoding: "utf8" });
	const localHostsLines = filterComments(localHostsFile);

	console.log("fetching anti malware hosts...");
	const antiMalwareHosts = await getHosts(
		"https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts",
	);
	console.log("fetching anti fake news hosts...");
	const fakeNewsGamblingHosts = await getHosts(
		"https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling/hosts",
	);

	const allHosts = new Set([
		...localHostsLines,
		...antiMalwareHosts,
		...fakeNewsGamblingHosts,
	]);
	const allHostsText = Array.from(allHosts).join("\n");

	await copyFile(HOSTS_PATH, `${HOSTS_PATH}.${Date.now()}`);
	await writeFile(HOSTS_PATH, allHostsText);

	console.log(
		`All done! (added ${NUMBER_FORMATTER.format(allHosts.size)} hosts)`,
	);
}

main().catch((e) => {
	console.error(e);
	process.exit(1);
});
